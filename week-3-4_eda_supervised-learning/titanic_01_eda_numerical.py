# -*- coding: utf-8 -*-
"""titanic-01_eda-numerical.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/136V2SWswaMtwz-NTRupaikNWDXfsu1C5

# Titanic: EDA with Numerica Data

* <b>PassengerID</b>: random ID assigned to passengers
* <b>Pclass</b>: Ticket class of passenger (i.e, 1st class, 2nd class, and 3rd class)
* <b>Name</b>: Name of the passenger
* <b>Sex</b>: Male or Female
* <b>Age</b>: Age of passenger
* <b>SibSp</b>: Number of siblings accompanying passenger
* <b>Parch</b>: Number of parents and children accompanying passenger
* <b>Ticket</b>: Ticket number of passenger
* <b>Fare</b>: Fare paid for ticket
* <b>Cabin</b>: Cabin number of passenger
* <b>Embarked</b>: Port from which passenger embarked
* <b>Survived</b>: 0 and 1 for died and survived, respectively
"""

# Import the libraries for EDA (Exploratory Data Analysis)

# Pandas for multidimensional array
import pandas as pd

# NumPy for numerical operation on multidimensional array
import numpy as np

# Matplotlib and Seaborn for visualization
import matplotlib.pyplot as plt
import seaborn as sns

# Import titanic.csv as a Dataframe
titanicDf = pd.read_csv('./titanic.csv')

titanicDf.head()

# Look at general info about the data
titanicDf.info()

# Remove irrelevant and categorical features
featuresRemove = ['PassengerId','Name','Sex','Ticket','Cabin','Embarked']


# axis is 1 for column, 0 for row
# inplace 
# if True, will modify the original Dataframe
# if False, duplicate and modify
# titanicDf_after_change = titanicDf.drop( featuresRemove, axis=1, inplace=False )

titanicDf.drop( featuresRemove, axis=1, inplace=True )

# Preview
titanicDf.head()

# Show descriptive statistics for the data
titanicDf.describe()

# Breakdown of features for survived vs non-survived
titanicDf.groupby('Survived').mean()

explanatoryFeatures = ['SibSp','Parch','Pclass']

for index, feature in enumerate(explanatoryFeatures):
    # Embed plot inside the notebook
    plt.figure(index)

    # Add a graph inside the plot
    sns.catplot(x=feature, y='Survived', data=titanicDf, kind='point', aspect=2)

titanicDf.groupby('Pclass').describe()['Survived']

cond = titanicDf['Pclass'] == 3
titanicDf[cond].groupby('Survived').describe()

cond = titanicDf['Pclass'] == 2
titanicDf[cond].groupby('Survived').describe()

cond = titanicDf['Pclass'] == 1
titanicDf[cond].groupby('Survived').describe()